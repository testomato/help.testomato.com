"use strict";(self.webpackChunkhelp=self.webpackChunkhelp||[]).push([[9405],{51530:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"checks/string-checks","title":"String checks","description":"Testomato allow create string checks for two types of page content. Those simple checks can be created for:","source":"@site/docs/checks/02-string-checks.md","sourceDirName":"checks","slug":"/checks/string-checks","permalink":"/checks/string-checks","draft":false,"unlisted":false,"editUrl":"https://github.com/testomato/help.testomato.com/edit/master/docs/checks/02-string-checks.md","tags":[],"version":"current","lastUpdatedAt":1731000015000,"sidebarPosition":2,"frontMatter":{"id":"string-checks","title":"String checks","sidebar_label":"String checks"},"sidebar":"docs","previous":{"title":"Introduction","permalink":"/checks/introduction"},"next":{"title":"Semantic checks","permalink":"/checks/semantic"}}');var c=s(74848),r=s(28453);const o={id:"string-checks",title:"String checks",sidebar_label:"String checks"},i=void 0,a={},h=[{value:"How regular expressions are processed",id:"how-regular-expressions-are-processed",level:3},{value:"When use <code>Text on page</code> when <code>HTML on page</code>?",id:"when-use-text-on-page-when-html-on-page",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"Testomato allow create string checks for two types of page content. Those simple checks can be created for:"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.img,{alt:"String checks",src:s(82610).A+"",width:"1052",height:"170"})}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"HTML on page"})," - represents raw source code that we downloaded from given URL"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"Text on page"})," - represents just readable text from given URL"]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["Then you can use following ",(0,c.jsx)(n.strong,{children:"operators"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"contains"})," - check that downloaded content contains given string with ",(0,c.jsx)(n.a,{href:"https://www.php.net/manual/en/function.substr.php",children:"substr()"})," PHP function"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"does not contain"})," - check that content does not contain given string"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"equals"})," - content is exactly same"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"matches"})," - check that content match regular expression with ",(0,c.jsx)(n.a,{href:"https://www.php.net/manual/en/function.preg-match.php",children:"preg_match()"})," PHP function"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"does not match"})," - check that content not match"]}),"\n"]}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"String checks"})," are case sensitive, so make sure you ",(0,c.jsx)(n.strong,{children:"PaY ClosE AtTentioN"})," to the text you enter."]})}),"\n",(0,c.jsx)(n.h3,{id:"how-regular-expressions-are-processed",children:"How regular expressions are processed"}),"\n",(0,c.jsxs)(n.p,{children:["Testomato process and escape all users inputs including regular expressions. We are using ",(0,c.jsx)(n.code,{children:"{"})," and ",(0,c.jsx)(n.code,{children:"}"})," for wrapping your\nregex and also add following ",(0,c.jsx)(n.a,{href:"https://www.php.net/manual/en/reference.pcre.pattern.modifiers.php",children:"Pattern Modifiers"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"u"})," pattern and subject strings are treated as UTF-8. An invalid subject will cause the preg_* function to match nothing;"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"m"})," subject strings are treated as multi-line string"]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["You can debug your regex with ",(0,c.jsx)(n.a,{href:"https://www.phpliveregex.com/",children:"https://www.phpliveregex.com/"})," or ",(0,c.jsx)(n.a,{href:"https://phphub.net/regex/",children:"https://phphub.net/regex/"})]}),"\n",(0,c.jsxs)(n.h3,{id:"when-use-text-on-page-when-html-on-page",children:["When use ",(0,c.jsx)(n.code,{children:"Text on page"})," when ",(0,c.jsx)(n.code,{children:"HTML on page"}),"?"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"HTML on page"})," is content as we downloaded from given url, only encoded to ",(0,c.jsx)(n.code,{children:"utf8"})," - it's useful for checking whole content including\nHTML tags or meta information in ",(0,c.jsx)(n.code,{children:"<head></head>"}),"."]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"Text on page"})," is subset of ",(0,c.jsx)(n.code,{children:"HTML on page"})," - we just remove all markup (HTML tags,\nheader, scripts etc.) and then apply all your checks."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},82610:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/string-checks-953cceabd74d1ed4ec9f5f489f8f0864.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(96540);const c={},r=t.createContext(c);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);